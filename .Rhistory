dim(x)
qplot(x[,246],y)
qplot(x[,245],y)
qplot(x[,244],y)
qplot(x[,243],y)
qplot(x[,242],y)
plot(fit)
plot(dr$w[,1])
plot(dr$w[,2])
plot(dr$w[,3])
plot(dr$w[,4])
plot(dr$w[,5])
# read the label data
dat <- read.csv(file='data/pac2018/phenotype.csv', header = T, sep=',')
y <- dat$label - 1# 0 or 1
x <- as.matrix(cbind(dat$scannerID==1, dat$scannerID==2, dat$scannerID==3))
x <- data.frame(id1=as.numeric(dat$scannerID==1),
id2=as.numeric(dat$scannerID==2),
id3=as.numeric(dat$scannerID==3))
x <- cbind(x, gender=dat$gender-1, dat$age, dat$TIV )
# read the predictor data
sMRI <- read.csv(file='data/pac2018/sMRI.csv', header = T, sep=',')
x <- cbind(x, sMRI)
colnames(x)
colnames(x)[1:30]
# read the label data
dat <- read.csv(file='data/pac2018/phenotype.csv', header = T, sep=',')
y <- dat$label - 1# 0 or 1
x <- as.matrix(cbind(dat$scannerID==1, dat$scannerID==2, dat$scannerID==3))
x <- data.frame(id1=as.numeric(dat$scannerID==1),
id2=as.numeric(dat$scannerID==2),
id3=as.numeric(dat$scannerID==3))
x <- cbind(x, gender=dat$gender-1, age=dat$age, TIV=dat$TIV )
# read the predictor data
sMRI <- read.csv(file='data/pac2018/sMRI.csv', header = T, sep=',')
x <- cbind(x, sMRI)
colnames(x)[1:20]
ind <- 5:ncol(x)
x[,ind] <- scale(x[,ind])
dr <- spca(x,y, nctot=20, alpha = 0.01, normalize = T) # supervised principal components (SPC)
# dr <- ispca(x,y,nctot=20) # iterative SPC, alternative dimension reduction technique
z <- dr$z
ggplot() + geom_point(aes(x=z[,1],y=z[,2]), color=y+2)
ggplot() + geom_point(aes(x=z[,1],y=z[,2]), color=y+2)
dim(dr$w)
plot(dr$w[,10])
plot(dr$w[,11])
plot(dr$w[,12])
plot(dr$w[,13])
plot(dr$w[,14])
?spca
dr <- spca(x,y, nctot=20, ncsup=10, alpha = 0.01, normalize = F) # supervised principal components (SPC)
# dr <- ispca(x,y,nctot=20) # iterative SPC, alternative dimension reduction technique
z <- dr$z
ggplot() + geom_point(aes(x=z[,1],y=z[,2]), color=y+2)
fit <- stan_glm(y~., family='binomial', data=data.frame(z,y),
prior = hs(global_scale = 1/(ncol(z)-1)/sqrt(n)), iter=300)
ztest <- predict(dr, xtest) # the transformed features corresponding to the test x
colnames(data.frame(z,y))
colnames(data.frame(ztest))
ztest <- predict(dr, xtest) # the transformed features corresponding to the test x
plot(fit)
ztest <- predict(dr, xtest)
preds <- posterior_linpred(fit, newdata = data.frame(ztest), transform = T)
dim(preds)
colMeans(preds)
colMeans(preds)
round(colMeans(preds))==ytest
ztest <- predict(dr, xtest) # the transformed features corresponding to the test x
ztest <- predict(dr, xtest) # the transformed features corresponding to the test x
pred <- colMeans(posterior_linpred(fit, newdata = data.frame(ztest), transform = T))
ztest <- predict(dr, xtest) # the transformed features corresponding to the test x
dr
plot(dr$w[,10])
plot(dr$w[,11])
plot(dr$w[,12])
plot(dr$w[,13])
ztest <- predict(dr, xtest) # the transformed features corresponding to the test x
ztest <- predict(dr, xtest) # the transformed features corresponding to the test x
ztest <- predict(dr, xtest) # the transformed features corresponding to the test x
ztest <- predict(dr, xtest) # the transformed features corresponding to the test x
ztest <- predict(dr, xtest) # the transformed features corresponding to the test x
dim(xtest)
dim(x)
# read the label data
dat <- read.csv(file='data/pac2018/phenotype.csv', header = T, sep=',')
y <- dat$label - 1# 0 or 1
x <- as.matrix(cbind(dat$scannerID==1, dat$scannerID==2, dat$scannerID==3))
x <- data.frame(id1=as.numeric(dat$scannerID==1),
id2=as.numeric(dat$scannerID==2),
id3=as.numeric(dat$scannerID==3))
x <- cbind(x, gender=dat$gender-1, age=dat$age, TIV=dat$TIV )
# read the sMRI data
sMRI <- read.csv(file='data/pac2018/sMRI.csv', header = T, sep=',')
x <- cbind(x, sMRI)
ind <- 5:ncol(x)
x[,ind] <- scale(x[,ind])
set.seed(1234)
ntest <- round(0.3*length(y))
itest <- sample(1:length(y), ntest)
itrain <- setdiff(1:length(y), itest)
xtest <- x[itest,]
ytest <- y[itest]
x <- x[itrain,]
y <- y[itrain]
n <- length(y)
dim(x)
dim(xtest)
dr <- spca(x,y, nctot=20, ncsup=10, alpha = 0.01, normalize = F) # supervised principal components (SPC)
# dr <- ispca(x,y,nctot=20) # iterative SPC, alternative dimension reduction technique
z <- dr$z
ggplot() + geom_point(aes(x=z[,1],y=z[,2]), color=y+2)
fit <- stan_glm(y~., family='binomial', data=data.frame(z,y),
prior = hs(global_scale = 1/(ncol(z)-1)/sqrt(n)), iter=300)
ztest <- predict(dr, xtest) # the transformed features corresponding to the test x
pred <- colMeans(posterior_linpred(fit, newdata = data.frame(ztest), transform = T))
mean(round(pred)==ytest)
mean(y)
mean(ytest)
mean(1-ytest)
mean(y)
mean(y==0)
mean(ytest==0)
e <- extract(fit$stanfit)
out <- coeff.transform(dr, t(e$beta), e$alpha)
dim(out$beta)
betax <- out$beta
plot(rowMeans(betax))
dr <- spca(x,y, nctot=20,  alpha = 0.01, normalize = F) # supervised principal components (SPC)
# dr <- ispca(x,y,nctot=20) # iterative SPC, alternative dimension reduction technique
z <- dr$z
ggplot() + geom_point(aes(x=z[,1],y=z[,2]), color=y+2)
fit <- stan_glm(y~., family='binomial', data=data.frame(z,y),
prior = hs(global_scale = 1/(ncol(z)-1)/sqrt(n)), iter=300)
ztest <- predict(dr, xtest) # the transformed features corresponding to the test x
pred <- colMeans(posterior_linpred(fit, newdata = data.frame(ztest), transform = T))
mean(round(pred)==ytest)
dr <- spca(x,y, nctot=20, ncsup=10, alpha = 0.01, normalize = F) # supervised principal components (SPC)
# dr <- ispca(x,y,nctot=20) # iterative SPC, alternative dimension reduction technique
z <- dr$z
ggplot() + geom_point(aes(x=z[,1],y=z[,2]), color=y+2)
fit <- stan_glm(y~., family='binomial', data=data.frame(z,y),
prior = hs(global_scale = 1/(ncol(z)-1)/sqrt(n)), iter=300)
ztest <- predict(dr, xtest) # the transformed features corresponding to the test x
pred <- colMeans(posterior_linpred(fit, newdata = data.frame(ztest), transform = T))
mean(round(pred)==ytest)
e <- extract(fit$stanfit) # fetch the posterior draws from the stanfit-object
temp <- coeff.transform(dr, t(e$beta), e$alpha)
temp
e <- extract(fit$stanfit) # fetch the posterior draws from the stanfit-object
temp <- coeff.transform(dr, t(e$beta), e$alpha)
betax <- temp$beta # coefficients in the x-space
qplot(rowMeans(betax))
dim(betax)
e <- extract(fit$stanfit) # fetch the posterior draws from the stanfit-object
temp <- coeff.transform(dr, t(e$beta), e$alpha)
betax <- temp$beta # coefficients in the x-space
qplot(1:ncol(x), rowMeans(betax))
e <- extract(fit$stanfit) # fetch the posterior draws from the stanfit-object
temp <- coeff.transform(dr, t(e$beta), e$alpha)
betax <- temp$beta # coefficients in the x-space
qplot(1:ncol(x), rowMeans(betax))
e <- extract(fit$stanfit) # fetch the posterior draws from the stanfit-object
temp <- coeff.transform(dr, t(e$beta), e$alpha)
betax <- temp$beta # coefficients in the x-space
qplot(1:ncol(x), rowMeans(betax))
e <- extract(fit$stanfit) # fetch the posterior draws from the stanfit-object
temp <- coeff.transform(dr, t(e$beta), e$alpha)
betax <- temp$beta # coefficients in the x-space
qplot(1:ncol(x), rowMeans(betax))
e <- extract(fit$stanfit) # fetch the posterior draws from the stanfit-object
temp <- coeff.transform(dr, t(e$beta), e$alpha)
betax <- temp$beta # coefficients in the x-space
qplot(1:ncol(x), rowMeans(betax)) + geom_hline(yintercept = 0, linetype=2) + xlab('Feature') + ylab('Coefficient')
qplot(1:ncol(x), rowMeans(betax)) + geom_hline(yintercept = 0, linetype=2) + xlab('Feature') + ylab('Coefficient')
e <- extract(fit$stanfit) # fetch the posterior draws from the stanfit-object
temp <- coeff.transform(dr, t(e$beta), e$alpha)
betax <- temp$beta # coefficients in the x-space
qplot(1:ncol(x), rowMeans(betax)) + geom_hline(yintercept = 0, linetype=2) + xlab('Feature') + ylab('Coefficient')
colnames(x)=='gender'
which(colnames(x)=='gender')
xname <- 'gender'
j <- which(colnames(x)==xname)
qplot(betax[,j]) + xlab(paste0('Coefficient for ', xname))
xname <- 'gender'
j <- which(colnames(x)==xname)
qplot(betax[,j]) + xlab(paste0('Coefficient for ', xname))
colnames(x)[1:5]
xname <- 'age'
j <- which(colnames(x)==xname)
qplot(betax[,j]) + xlab(paste0('Coefficient for ', xname))
fit0 <- stan_glm(y~x$age)
fit0 <- stan_glm(y~x$age, iter=300)
e <- extract(fit$stanfit)
qplot(e$beta)
e
e$beta
qplot(e$beta)
plot(e$beta)
qplot(e$beta)
qplot(as.vector(e$beta))
e <- extract(fit0$stanfit)
qplot(e$beta)
# read the label data
dat <- read.csv(file='data/pac2018/phenotype.csv', header = T, sep=',')
y <- dat$label - 1 # 0 or 1
x1 <- data.frame(id1=as.numeric(dat$scannerID==1),
id2=as.numeric(dat$scannerID==2),
id3=as.numeric(dat$scannerID==3))
x1 <- cbind(x1, gender=dat$gender-1, age=dat$age, TIV=dat$TIV )
# read the sMRI data
sMRI <- read.csv(file='data/pac2018/sMRI.csv', header = T, sep=',')
x2 <- cbind(x, sMRI)
plot(colMeans(x2))
plot(colMeans(x2))
x2
# read the label data
dat <- read.csv(file='data/pac2018/phenotype.csv', header = T, sep=',')
y <- dat$label - 1 # 0 or 1
x1 <- data.frame(id1=as.numeric(dat$scannerID==1),
id2=as.numeric(dat$scannerID==2),
id3=as.numeric(dat$scannerID==3))
x1 <- cbind(x1, gender=dat$gender-1, age=dat$age, TIV=dat$TIV )
# read the sMRI data
x2 <- read.csv(file='data/pac2018/sMRI.csv', header = T, sep=',')
plot(colMeans(x2))
plot(apply(x2,2,sd))
head(x1)
x1[,c('age','TIV)]
)
()
?
13
321341
;
;
''
'
x1[,c('age','TIV')]
x1[,c('age','TIV')] <- scale(x1[,c('age','TIV')])
plot(x1$age)
plot(x1$TIV)
# read the label data
dat <- read.csv(file='data/pac2018/phenotype.csv', header = T, sep=',')
y <- dat$label - 1 # 0 or 1
x1 <- data.frame(id1=as.numeric(dat$scannerID==1),
id2=as.numeric(dat$scannerID==2),
id3=as.numeric(dat$scannerID==3))
x1 <- cbind(x1, gender=dat$gender-1, age=dat$age, TIV=dat$TIV )
# read the sMRI data
x2 <- read.csv(file='data/pac2018/sMRI.csv', header = T, sep=',')
x1[,c('age','TIV')] <- scale(x1[,c('age','TIV')])
x2 <- scale(x2)
set.seed(1234)
ntest <- round(0.3*length(y))
itest <- sample(1:length(y), ntest)
itrain <- setdiff(1:length(y), itest)
x1test <- x1[itest,]
x2test <- x2[itest,]
ytest <- y[itest]
x1 <- x1[itrain,]
x2 <- x2[itrain,]
y <- y[itrain]
n <- length(y)
dr <- spca(x2,y, nctot=20, ncsup=10, alpha = 0.01, normalize = F) # supervised principal components (SPC)
# dr <- ispca(x,y,nctot=20) # iterative SPC, alternative dimension reduction technique
z <- dr$z
ggplot() + geom_point(aes(x=z[,1],y=z[,2]), color=y+2)
fit <- stan_glm(y~., family='binomial', data=data.frame(x1,z,y),
prior = hs(global_scale = 1/(ncol(z)-1)/sqrt(n)), iter=300)
plot(fit)
ztest <- predict(dr, xtest) # the transformed features corresponding to the test x
pred <- colMeans(posterior_linpred(fit, newdata = data.frame(ztest), transform = T))
ztest <- predict(dr, x2test) # the transformed features corresponding to the test x
pred <- colMeans(posterior_linpred(fit, newdata = data.frame(x1test,ztest), transform = T))
mean(round(pred)==ytest)
ntest
sqrt(var(round(pred)==ytest)/ntest)
e <- extract(fit$stanfit) # fetch the posterior draws from the stanfit-object
colnames(e$beta)
e$beta
dim(e$beta)
dim(temp$beta)
e <- extract(fit$stanfit) # fetch the posterior draws from the stanfit-object
temp <- coeff.transform(dr, t(e$beta[,7:26]), e$alpha)
dim(temp$beta)
dim(e$beta)
e <- extract(fit$stanfit) # fetch the posterior draws from the stanfit-object
temp <- coeff.transform(dr, t(e$beta[,7:26]), e$alpha)
betax <- cbind(e$beta[,1:6], t(temp$beta)) # coefficients in the x-space
dim(betax)
colnames(betax)
qplot(1:(ncol(x1)+ncol(x2)), colMeans(betax)) + geom_hline(yintercept = 0, linetype=2) + xlab('Feature') + ylab('Coefficient')
qplot(1:(ncol(x1)+ncol(x2)), colMeans(betax)) + geom_hline(yintercept = 0, linetype=2) + xlab('Feature') + ylab('Coefficient')
qplot(1:(ncol(x1)+ncol(x2)), colMeans(betax)) + geom_hline(yintercept = 0, linetype=2) + xlab('Feature') + ylab('Coefficient') + ylim(-0.2,0.2)
qplot(1:(ncol(x1)+ncol(x2)), colMeans(betax)) + geom_hline(yintercept = 0, linetype=2) + xlab('Feature') + ylab('Coefficient')
qplot(1:(ncol(x1)+ncol(x2)), colMeans(betax)) + geom_hline(yintercept = 0, linetype=2) + xlab('Feature') + ylab('Coefficient') + ylim(-0.2,0.2)
xname <- 'age'
j <- which(colnames(x)==xname)
qplot(betax[,j]) + xlab(paste0('Coefficient for ', xname))
xname <- 'age'
j <- which(colnames(x1)==xname)
qplot(betax[,j]) + xlab(paste0('Coefficient for ', xname))
xname <- 'gender'
j <- which(colnames(x1)==xname)
qplot(betax[,j]) + xlab(paste0('Coefficient for ', xname))
qplot(betax[,1],beta[,2])
qplot(betax[,1],betax[,2])
qplot(betax[,1],betax[,3])
qplot(betax[,1],betax[,4])
qplot(betax[,1],betax[,5])
qplot(betax[,1],betax[,6])
qplot(betax[,1],betax[,7])
qplot(betax[,1],betax[,8])
qplot(betax[,1],betax[,9])
qplot(betax[,1],betax[,10])
colnames(x1)
library(bayesplot)
?bayesplot
mcmc_intervals(betax)
dim(betax)
dim(t(betax[,1:10]))
mcmc_areas(t(betax[,1:10]))
mcmc_areas(t(betax[,1:10]))
?mcmc_areas
n <- 20
p <- 100
x <- matrix(rnorm(n*p), ncol=p)
b <- rep(0, p)
b[1:4] <- 1
y <- x %*% b + rnorm(n)
fit <- stan_lm(y~x, data=data.frame(x,y), prior=hs(global_scale = 1/(p-1)/sqrt(n)))
?library(rstanarm)
library(rstanarm)
fit <- stan_lm(y~x, data=data.frame(x,y), prior=hs(global_scale = 1/(p-1)/sqrt(n)))
n <- 20
p <- 100
x <- matrix(rnorm(n*p), ncol=p)
b <- rep(0, p)
b[1:4] <- 1
y <- x %*% b + rnorm(n)
fit <- stan_lm(y~x, data=data.frame(x,y), prior=hs(global_scale = 1/(p-1)/sqrt(n)))
library(rstanarm)
fit <- stan_lm(y~x, data=data.frame(x,y), prior=hs(global_scale = 1/(p-1)/sqrt(n)))
fit <- stan_glm(y~x, data=data.frame(x,y), prior=hs(global_scale = 1/(p-1)/sqrt(n)))
options(mc.cores=4)
fit <- stan_glm(y~x, data=data.frame(x,y), prior=hs(global_scale = 1/(p-1)/sqrt(n)))
plot(fit)
e <- extract(fit$stanfit)
dim(e$beta)
library(rstan)
dim(e$beta)
e <- extract(fit$stanfit)
dim(e$beta)
plot(e$beta[,1])
qplot(e$beta[,1])
n <- 30
p <- 50
x <- matrix(rnorm(n*p), ncol=p)
b <- rep(0, p)
b[1:4] <- 1
y <- x %*% b + rnorm(n)
fit <- stan_glm(y~x, data=data.frame(x,y), prior=hs(global_scale = 1/(p-1)/sqrt(n)))
plot(e$beta[,1])
qplot(e$beta[,1])
e <- extract(fit$stanfit)
qplot(e$beta[,1])
qplot(e$beta[,2])
qplot(e$beta[,3])
qplot(e$beta[,4])
qplot(e$beta[,5])
qplot(e$beta[,6])
qplot(e$beta[,7])
qplot(e$beta[,8])
qplot(e$beta[,9])
plot(colMeans(e$beta))
# read the label data
dat <- read.csv(file='data/pac2018/phenotype.csv', header = T, sep=',')
y <- dat$label - 1 # 0 or 1
x1 <- data.frame(id1=as.numeric(dat$scannerID==1),
id2=as.numeric(dat$scannerID==2),
id3=as.numeric(dat$scannerID==3))
x1 <- cbind(x1, gender=dat$gender-1, age=dat$age, TIV=dat$TIV )
# read the sMRI data
x2 <- read.csv(file='data/pac2018/sMRI.csv', header = T, sep=',')
x1[,c('age','TIV')] <- scale(x1[,c('age','TIV')])
x2 <- scale(x2)
set.seed(1234)
ntest <- round(0.3*length(y))
itest <- sample(1:length(y), ntest)
itrain <- setdiff(1:length(y), itest)
x1test <- x1[itest,]
x2test <- x2[itest,]
ytest <- y[itest]
x1 <- x1[itrain,]
x2 <- x2[itrain,]
y <- y[itrain]
n <- length(y)
dim(x)
dim(x1)
dim(x2)
fit <- stan_glm(y~., family='binomial', data=data.frame(x1,x2,y),
prior = hs(global_scale = 1/(ncol(z)-1)/sqrt(n)), iter=300)
80/60
800/60
pred <- colMeans(posterior_linpred(fit, newdata=data.frame(x1test,x2test), transform = T))
mean(round(pred)==ytest)
plot(fit)
lfit <- cv.glmnet(x,y,family='binomial')
plot(lfit)
lfit <- cv.glmnet(x,y,family='binomial')
plot(lfit)
plot(lfit)
lfit <- cv.glmnet(cbind(x1,x2),y,family='binomial')
lfit <- cv.glmnet(cbind(x1,x2),y,family='binomial')
lfit <- cv.glmnet(cbind(x1,x2),y,family='binomial')
library(glmnet)
lfit <- cv.glmnet(cbind(x1,x2),y,family='binomial')
lfit <- cv.glmnet(as.matrix(cbind(x1,x2)),y,family='binomial')
plot(lfit)
lfit <- cv.glmnet(as.matrix(cbind(x1,x2)),y,family='binomial', type.measure = 'class')
plot(lfit)
fit
df <- as.data.frame(fit)
colnames(df)
dim(df)
plot(colMeans(df))
fit <- stan_glm(y~., family='binomial', data=data.frame(x1,z,y),
prior = hs(global_scale = 1/(ncol(z)-1)/sqrt(n)), iter=300)
library(rstanarm)
fit <- stan_glm(y~., family='binomial', data=data.frame(x1,z,y),
prior = hs(global_scale = 1/(ncol(z)-1)/sqrt(n)), iter=300)
options(mc.cores=4)
fit <- stan_glm(y~., family='binomial', data=data.frame(x1,z,y),
prior = hs(global_scale = 1/(ncol(z)-1)/sqrt(n)), iter=300)
plot(fit)
df <- as.data.frame(fit)
head(df)
dim(as.matrix(fit))
dim(df)
?coefficients
?coeff.transform
library(dimreduce)
?coeff.transform
rm(list=ls())
fit
library(dimreduce)
?ispca
df <- as.data.frame(fit)
# read the label data
dat <- read.csv(file='data/pac2018/phenotype.csv', header = T, sep=',')
y <- dat$label - 1 # 0 or 1
x1 <- data.frame(id1=as.numeric(dat$scannerID==1),
id2=as.numeric(dat$scannerID==2),
id3=as.numeric(dat$scannerID==3))
x1 <- cbind(x1, gender=dat$gender-1, age=dat$age, TIV=dat$TIV )
# read the sMRI data
x2 <- read.csv(file='data/pac2018/sMRI.csv', header = T, sep=',')
x1[,c('age','TIV')] <- scale(x1[,c('age','TIV')])
x2 <- scale(x2)
set.seed(1234)
ntest <- round(0.3*length(y))
itest <- sample(1:length(y), ntest)
itrain <- setdiff(1:length(y), itest)
x1test <- x1[itest,]
x2test <- x2[itest,]
ytest <- y[itest]
x1 <- x1[itrain,]
x2 <- x2[itrain,]
y <- y[itrain]
n <- length(y)
dr <- spca(x2,y, nctot=20, ncsup=10, alpha = 0.01, normalize = F) # supervised principal components (SPC)
z <- dr$z
ggplot() + geom_point(aes(x=z[,1],y=z[,2]), color=y+2)
library(ggplot2)
ggplot() + geom_point(aes(x=z[,1],y=z[,2]), color=y+2)
fit <- stan_glm(y~., family='binomial', data=data.frame(x1,z,y),
prior = hs(global_scale = 1/(ncol(z)-1)/sqrt(n)), iter=300)
ztest <- predict(dr, x2test) # the transformed features corresponding to the test x
pred <- colMeans(posterior_linpred(fit, newdata = data.frame(x1test,ztest), transform = T))
mean(round(pred)==ytest)
df <- as.data.frame(fit)
alpha_z <- df[,1]
beta_z <- df[,8:ncol(df)]
temp <- coeff.transform(dr, t(beta_z), alpha_z)
# e <- extract(fit$stanfit) # fetch the posterior draws from the stanfit-object
# temp <- coeff.transform(dr, t(e$beta[,7:26]), e$alpha)
# betax <- cbind(e$beta[,1:6], t(temp$beta)) # coefficients in the x-space
dim(temp)
draws <- as.data.frame(fit)
alpha_z <- draws[,1]
beta_z <- draws[,8:ncol(df)]
temp <- coeff.transform(dr, t(beta_z), alpha_z)
# e <- extract(fit$stanfit) # fetch the posterior draws from the stanfit-object
# temp <- coeff.transform(dr, t(e$beta[,7:26]), e$alpha)
beta_x <- cbind(draws[,2:7], t(temp$beta)) # coefficients in the x-space
dim(beta_x)
qplot(1:(ncol(x1)+ncol(x2)), colMeans(beta_x)) + geom_hline(yintercept = 0, linetype=2) + xlab('Feature') + ylab('Coefficient')
qplot(1:(ncol(x1)+ncol(x2)), colMeans(beta_x)) + geom_hline(yintercept = 0, linetype=2) + xlab('Feature') + ylab('Coefficient') + ylim(-0.2,0.2)
xname <- 'id1'
j <- which(colnames(x1)==xname)
qplot(beta_x[,j]) + xlab(paste0('Coefficient for ', xname))
?coeff.transform
?coeff.transform.spca
class(dr)
library(projpred)
dref <- init_refmodel(cbind(x1,x2),y, family=binomial())
vsel <- cv_varsel(dref)
varsel_plot(vsel)
vsel <- cv_varsel(dref)
vsel <- varsel(dref)
varsel_plot(vsel, stats='acc')
